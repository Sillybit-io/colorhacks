"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[419],{1202:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"api/functions/getColorNameFromRgb","title":"getColorNameFromRgb()","description":"Retrieves the color name from a given RGB color.","source":"@site/docs/api/functions/getColorNameFromRgb.md","sourceDirName":"api/functions","slug":"/api/functions/getColorNameFromRgb","permalink":"/colorhacks/docs/api/functions/getColorNameFromRgb","draft":false,"unlisted":false,"editUrl":"https://github.com/sillybit-io/colorhacks/tree/main/website/docs/api/functions/getColorNameFromRgb.md","tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"getColorNameFromHsl()","permalink":"/colorhacks/docs/api/functions/getColorNameFromHsl"},"next":{"title":"getContrastRatio()","permalink":"/colorhacks/docs/api/functions/getContrastRatio"}}');var r=n(6070),c=n(2907);const s={},i="getColorNameFromRgb()",l={},a=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Throws",id:"throws",level:2},{value:"Example",id:"example",level:2},{value:"Defined in",id:"defined-in",level:2}];function d(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.header,{children:(0,r.jsx)(o.h1,{id:"getcolornamefromrgb",children:"getColorNameFromRgb()"})}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-ts",children:"function getColorNameFromRgb(options): GetColorNameFromHexOutput\n"})}),"\n",(0,r.jsx)(o.p,{children:"Retrieves the color name from a given RGB color."}),"\n",(0,r.jsx)(o.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(o.table,{children:[(0,r.jsx)(o.thead,{children:(0,r.jsxs)(o.tr,{children:[(0,r.jsx)(o.th,{children:"Parameter"}),(0,r.jsx)(o.th,{children:"Type"}),(0,r.jsx)(o.th,{children:"Description"})]})}),(0,r.jsxs)(o.tbody,{children:[(0,r.jsxs)(o.tr,{children:[(0,r.jsx)(o.td,{children:(0,r.jsx)(o.code,{children:"options"})}),(0,r.jsx)(o.td,{children:(0,r.jsx)(o.code,{children:"object"})}),(0,r.jsx)(o.td,{children:"The options for converting RGB to color name."})]}),(0,r.jsxs)(o.tr,{children:[(0,r.jsx)(o.td,{children:(0,r.jsx)(o.code,{children:"options.b"})}),(0,r.jsx)(o.td,{children:(0,r.jsx)(o.code,{children:"number"})}),(0,r.jsx)(o.td,{children:"The blue component of the RGB color (0-255)."})]}),(0,r.jsxs)(o.tr,{children:[(0,r.jsx)(o.td,{children:(0,r.jsx)(o.code,{children:"options.g"})}),(0,r.jsx)(o.td,{children:(0,r.jsx)(o.code,{children:"number"})}),(0,r.jsx)(o.td,{children:"The green component of the RGB color (0-255)."})]}),(0,r.jsxs)(o.tr,{children:[(0,r.jsx)(o.td,{children:(0,r.jsx)(o.code,{children:"options.r"})}),(0,r.jsx)(o.td,{children:(0,r.jsx)(o.code,{children:"number"})}),(0,r.jsx)(o.td,{children:"The red component of the RGB color (0-255)."})]})]})]}),"\n",(0,r.jsx)(o.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.a,{href:"/colorhacks/docs/api/interfaces/GetColorNameFromHexOutput",children:(0,r.jsx)(o.code,{children:"GetColorNameFromHexOutput"})})}),"\n",(0,r.jsx)(o.p,{children:"An object containing information about the color:"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:"hexcode: The input hex code, normalized to lowercase with '#' prefix."}),"\n",(0,r.jsx)(o.li,{children:"colorName: The name of the closest matching color."}),"\n",(0,r.jsx)(o.li,{children:"isExactMatch: Boolean indicating if an exact match was found."}),"\n",(0,r.jsx)(o.li,{children:"shadeHex: The hex code of the closest matching color."}),"\n",(0,r.jsx)(o.li,{children:"shadeName: The name of the closest matching color (same as colorName)."}),"\n",(0,r.jsx)(o.li,{children:"distance: The color distance between the input and the closest match (0 for exact matches)."}),"\n"]}),"\n",(0,r.jsx)(o.h2,{id:"throws",children:"Throws"}),"\n",(0,r.jsx)(o.p,{children:"If unable to find a closest color match."}),"\n",(0,r.jsx)(o.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-ts",children:"const result = getColorNameFromRgb({ r: 255, g: 0, b: 0 });\n// Returns: { hexcode: '#ff0000', colorName: 'Red', isExactMatch: true, shadeHex: '#ff0000', shadeName: 'Red', distance: 0 }\n"})}),"\n",(0,r.jsx)(o.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.a,{href:"https://github.com/Sillybit-io/colorhacks/blob/65202bb6da0411a11e7fe2f61bc3ee36de485aeb/src/features/colorname/colorname.ts#L61",children:"colorname/colorname.ts:61"})})]})}function h(e={}){const{wrapper:o}={...(0,c.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},2907:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>i});var t=n(758);const r={},c=t.createContext(r);function s(e){const o=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(c.Provider,{value:o},e.children)}}}]);